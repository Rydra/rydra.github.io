{"Learning/Productivity/Cómo-estudiar-libros-IT-de-manera-eficaz":{"title":"Cómo estudiar libros IT de manera eficaz","links":[],"tags":["productivity"],"content":"Estudiar un libro de IT de manera eficaz requiere un enfoque estructurado y práctico. Aquí te dejo algunos pasos que pueden ayudarte:\n\n\nLee el índice y la introducción: Esto te dará una idea general del contenido y de los temas clave. Establece tus expectativas y objetivos de aprendizaje desde el principio.\n\n\nDivide el contenido: Organiza el estudio en bloques manejables. Por ejemplo, puedes estudiar un capítulo o una sección cada día o semana, dependiendo de tu disponibilidad.\n\n\nTomar notas: Mientras lees, anota los conceptos importantes. Si te gusta escribir código, intenta hacer pequeños resúmenes en tu propio estilo. Usa diagramas, esquemas o mapas mentales para visualizar las relaciones entre los conceptos.\n\n\nPracticar lo aprendido: La programación y otras habilidades de IT son prácticas. Después de leer una sección, intenta aplicarla de inmediato, ya sea escribiendo código o configurando un entorno en tu máquina.\n\n\nHacer preguntas: Pregúntate qué conceptos no entiendes del todo. Investiga más allá del libro si es necesario. Los foros, la documentación oficial o incluso videos pueden complementar tu comprensión.\n\n\nRepetición espaciada: Revisa tus notas y repite los conceptos clave después de unos días. La repetición espaciada es muy eficaz para retener información a largo plazo.\n\n\nProyectos prácticos: Encuentra un proyecto en el que puedas aplicar lo que estás aprendiendo. Esto no solo consolida tu conocimiento, sino que te da una sensación de logro.\n\n\nDiscute y comparte: Hablar sobre lo que aprendes, o incluso enseñar a otros, refuerza tu comprensión. Considera participar en grupos de estudio o foros relacionados con IT.\n\n\nEn tu caso, con tu experiencia como ingeniero de software, probablemente ya aplicas algunos de estos métodos, pero quizás podrías ajustar la forma en que tomas notas o introduces proyectos más pequeños para probar nuevos conceptos rápidamente.\n¿Te gustaría probar hacer un mindmap sobre algún tema específico?"},"Learning/Productivity/Cómo-hacer-Mindmaps":{"title":"Mindmaps","links":[],"tags":["productivity"],"content":"Mind maps\nHacer un mindmap (o mapa mental) es un proceso visual y estructurado para organizar ideas y conceptos. Aquí te explico cómo crear uno paso a paso:\n\nDefine el tema central\n\n\nColoca el tema principal en el centro del mapa. Este será el concepto o idea general que quieres desarrollar.\nEjemplo: Si estás estudiando sobre Desarrollo Web, esa sería tu idea central.\n\n\n\nAñade ideas principales\n\nDibuja líneas o ramas desde el centro hacia afuera, y en cada rama escribe una idea clave relacionada con el tema central. Estas ideas principales serán los conceptos más amplios o categorías dentro del tema central.\nEjemplo para Desarrollo Web: HTML, CSS, JavaScript, Backend, Bases de datos.\n\n\n\nDesglosa las ideas secundarias\n\n\n\nA partir de cada idea principal, dibuja nuevas ramas para añadir subideas o conceptos relacionados. Puedes repetir este proceso tantas veces como sea necesario, creando ramas más pequeñas con detalles o explicaciones adicionales.\nEjemplo: Desde la rama de HTML, podrías añadir subramas como: “Etiquetas básicas”, “Semántica”, “Atributos”.\n\n\n\nUsa palabras clave\n\nMantén cada rama lo más simple posible. Usa palabras clave o frases cortas para que las ideas sean fáciles de recordar y conectar.\nEvita escribir párrafos largos en el mapa, lo importante es que sea visual y directo.\n\n\n\nAñade colores, íconos o imágenes\n\nUsa colores diferentes para las ramas principales, lo que ayuda a visualizar y recordar mejor la información.\nSi es útil, puedes añadir pequeños iconos o imágenes para representar ideas. Esto hace que el mapa sea más atractivo y fácil de entender de un vistazo.\n\n\n\nConecta conceptos relacionados\n\nSi hay ideas que están conectadas entre sí, pero están en diferentes ramas, puedes dibujar líneas o flechas entre ellas para mostrar las relaciones.\nEjemplo: Desde CSS, podrías conectar la subrama de “Flexbox” con JavaScript si quieres mostrar cómo el diseño y la interacción pueden estar vinculados.\n\n\n\nRevisa y ajusta\n\nUna vez terminado, revisa el mapa para asegurarte de que todo esté organizado de manera lógica. Si ves que alguna parte necesita más detalle, puedes agregar más ramas o reorganizar las existentes.\n\n\n\nEjemplo visual de un mindmap básico (Desarrollo Web):\n    [Desarrollo Web]\n        |\n        |-- [HTML]\n        |      |-- Etiquetas básicas\n        |      |-- Semántica\n        |      |-- Atributos\n        |\n        |-- [CSS]\n        |      |-- Selectores\n        |      |-- Flexbox\n        |      |-- Grid\n        |\n        |-- [JavaScript]\n        |      |-- DOM Manipulation\n        |      |-- Eventos\n        |      |-- Frameworks (React, Vue)\n        |\n        |-- [Backend]\n        |      |-- Node.js\n        |      |-- APIs\n        |\n        |-- [Bases de Datos]\n               |-- SQL\n               |-- NoSQL\n\nHerramientas recomendadas para crear mindmaps\n\nExcalidraw: Perfecto para hacer mapas mentales a mano alzada, de manera rápida y sencilla.\nMindMeister o Miro: Herramientas visuales más avanzadas si prefieres algo con más opciones de personalización.\nObsidianMD: Tiene plugins que te permiten hacer diagramas estilo mindmap dentro de tus notas.\n\nBeneficios de los mindmaps:\n\nFacilitan la organización de ideas de manera visual.\nAyudan a retener la información al asociar conceptos y palabras clave.\nSon perfectos para la planificación de proyectos y el aprendizaje, ya que te obligan a desglosar temas complejos en partes más manejables.\n"},"Learning/Productivity/Cómo-la-gente-real-procesa-notas":{"title":"Cómo la gente real procesa notas","links":["tags/flashcards"],"tags":["productivity","flashcards"],"content":"Vídeo de referencia: www.youtube.com/watch\nHoy en día hay mucha información desperdigada, y saber seleccionarla es importante\nNarrow the top of the information funnel\nDeclara bancarrota de inbox\nDeclara bancarrota de la bandeja de entrada de manera regular (básicamente, aprende a archivar o borrar aquellos mensajes que sabes que no vas a utilizar\nEn Obsidian podría guardar mensajes en una especie de carpeta llamada “inbox” y añadirle el tag #inbox para así poder filtrarlo fácilmente.\nTambién puedes hacer queries en una nota para almacenar algún patrón de query de esta manera para búsquedas que hagas muy a menudo:\ntag:#TIL\nTambién puedes utilizar dataview para ello:\nTABLE type, status, tags\nFROM #TIL \nLa función de visualización de grafo también puede ser muy útil para detectar nodos huérfanos y así encontrar nodos que podrías potencialmente vincular.\nOrdenar las notas que quieres procesar\nHaz una búsqueda como antes, ordénalo de más nuevo a más antiguo en los resultados (ya que quizás haya resultados que ya no sean relevantes pasados cierto tiempo).\nPermítete olvidar\nDate el lujo de ignorar ciertas cosas y liberar peso de tus notas en tu mente\nConclusión\nTomar notas tendría que ser un esfuerzo divertido! Si no te lo pasas bien, plantéate si estás tomando notas que estén relacionadas sobre lo que te interesa.\nFlashcards\nflashcards\nQué cosas puedes hacer para evitar la sobresaturación de información en tus notas, y consumir la información de forma que sea relevante?\n?\n\nSelecciona sólo fuentes que sean relevantes para ti. No quieras abarcar mucho\nDeclara la bancarrota del inbox, borra o archiva aquello que ya no sea relevante. Ayúdate de tags como #inbox para poder marcar la información pendiente de analizar, así como también poder buscarla\nPermítete olvidar aquello que ya no sea relevante o no necesites\n\n"},"Learning/Productivity/Cómo-tomar-notas-con-la-técnica-Cornell":{"title":"Cómo tomar notas con la técnica Cornell","links":["Learning/Productivity/Cómo-tomar-notas-de-manera-eficaz-mientras-estudias-un-libro"],"tags":["productivity"],"content":"Cómo funciona el método Cornell\nLa técnica Cornell es una técnica de sintetización de información y de toma de notas que consiste básicamente en que, cuando vas a tomar notas en clase sobre cualquier tema, dividas la hoja en cuatro partes de esta manera con líneas (suponiendo una hoja de tamaño A4):\n\nPasos para usar esta plantilla:\n\nAntes de empezar la clase, completa la sección del Título, donde escribirás el nombre del tema que vas a dar en clase, la asignatura, el profesor, fecha y número de hoja. Así podrás ubicar siempre esta hoja en un tiempo posterior\nDurante la clase, toma notas de la información más relevante en la sección de Nota de Clase. Ahí debes plasmar todo lo que te ayude a enteder mejor el tema: fechas, dibujos, frases… cualquier cosa que sea susceptible de salir en un examen\nTras finalizar la clase, debes rellenar el cuadro de Ideas Clave. En este apartado deberás escribir las preguntas, palabras o ideas que consideres claves del tema, así como dudas que te hayan surgido para poder preguntarlo luego\nPor último, rellena el cuadro Resumen, donde deberás sintetizar al máximo toda la información que hay en el resto de la hoja para que puedas hacer una composición de los aspectos más relevantes del tema con un simple vistazo\nPuedes usar tantas hojas como quieras si te quedas sin espacio, simplemente numera las hojas que uses\n\nA modo de resumen, éste es el esquema de qué va en cada sección de la página:\n\nVentajas\n\nPara tomar notas usando el método debes llevar una escucha activa durante la clase, y esto te permite asimilar mejor la información relevante\nEste método exige un repaso posterior a la clase para terminar de completar los apuntes y organizar la información. Esta acción te ayudará a consolidar mejor los conocimientos adquiridos\nEl método requiere algo más de trabajo y tiempo, pero es una inversión ya que lo que trabajes de más ahora, no lo tendrás que estudiar tanto luego\n\nCómo aplicar el método Cornell para estudiar\n\nDurante la lectura del tema, anota en la sección de Notas todos los puntos relevantes que estés abordando, de manera telegráfica\nFormula preguntas clave sobre las anotaciones y otros datos relevantes en la columna de Ideas Clave\nCubre con una hoja en blanco la sección de Notas, echa un vistazo a las preguntas del cuadro Ideas Clave e intenta responder a tus preguntas con tus propias palabras, exponiendo tu explicación sobre todos los puntos importantes\nRepasa, dedica al menos diez minutos semanales en revisar todos tus apuntes y resúmenes para mantener la información fresca\n\nCSS Para Obsidian\nPoner en .obsidian/snippets/cornell-notes.css, y activar la opción en Appearance\n.markdown-preview-view.cornell-note .callout[data-callout=&quot;info&quot;] {\n    float: right;\n    padding: 8px;\n    position: absolute;\n    left: 4%;\n    width: 20%;\n    max-width: 300px;\n    min-width: 150px;\n    max-height: 200px;\n    color: white;\n}\n \n.markdown-preview-view.cornell-note .callout[data-callout=&quot;info&quot;] .callout-icon {\n    display: none;\n}\n \n.markdown-preview-view.cornell-note .markdown-preview-sizer,\n.markdown-source-view.cornell-note .markdown-preview-sizer {\n    max-width: var(--file-line-width);\n    margin-left: auto;\n    margin-right: auto;\n    margin-inline: auto;\n    width: 100%;\n}\n \n.markdown-preview-view.cornell-note .callout[data-callout=&quot;summary&quot;] {\n    margin-top: 100px;\n}\n \nNotas Relacionadas\n\nCómo tomar notas de manera eficaz mientras estudias un libro\n\nReferencias\n\ndev.to/sanathks/highly-effective-cornell-notes-with-obsidian-6le\nwww.educalive.com/blog/metodo-cornell-tomar-apuntes\nmedium.com/obsidian-observer/from-paper-to-pixel-mastering-the-cornell-note-taking-method-in-the-digital-age-dae13ed83c29\n"},"Learning/Productivity/Cómo-tomar-notas-de-manera-eficaz-mientras-estudias-un-libro":{"title":"Cómo tomar notas de manera eficaz mientras estudias un libro","links":["Learning/Productivity/Cómo-tomar-notas-con-la-técnica-Cornell","Learning/Productivity/Cómo-hacer-Mindmaps"],"tags":["productivity"],"content":"Para tomar notas de manera eficaz mientras estudias un libro, puedes seguir estos pasos:\n1. Previsualiza y organiza\n\nAntes de empezar cada capítulo, revisa los títulos, subtítulos, y cualquier resumen o sección de conclusiones para captar la estructura.\nPiensa en lo que ya sabes sobre el tema y qué esperas aprender. Esto te ayudará a anticipar la información relevante.\n\n2. Usa un sistema de notas\n\nPuedes emplear un sistema como el método Cornell (dividir tu hoja en secciones para conceptos principales, notas, y un resumen final) o el método de mapas mentales para conectar ideas de forma visual.\nEscribe resúmenes en tus propias palabras: evitar copiar textualmente ayuda a procesar la información.\nClasifica las notas en categorías: como conceptos clave, dudas, y citas importantes. Esta organización ayuda en el repaso posterior.\n\n3. Subraya y anota en el libro\n\nUsa subrayado selectivo en vez de subrayar todo. Enfócate en palabras clave y frases que capturen la idea central.\nSi el libro es tuyo, puedes añadir notas marginales con preguntas o reflexiones rápidas para enriquecer la lectura.\n\n4. Haz pausas para reflexionar\n\nAl finalizar una sección o un capítulo, haz una pausa para reflexionar. Pregúntate qué has entendido y cómo podrías explicar esa información en tus propias palabras.\n\n5. Resume y revisa al final\n\nResume el capítulo en un par de párrafos. Esto te ayudará a consolidar el aprendizaje y te servirá como guía para revisar en el futuro.\nRevisa tus notas al finalizar la lectura para retener los conceptos clave.\n"},"Memes/SOLID-principles-with-penguins":{"title":"SOLID principles with penguins","links":[],"tags":["memes"],"content":"\n\n\n\n\n"},"My-CV":{"title":"CV","links":[],"tags":[],"content":"David Jiménez Martínez\nSenior Software Engineer, Python Developer\n⌨️ Github - 📚 Blog - 🌐 LinkedIn\n🔖 Summary\nSoftware Engineer with +10 years of experience in the full development cycle of complex applications across a variety of fields, leading the development of software projects from inception and mentoring technical teams.\nSpecialised in:\n\nDesigning and building software from the ground\nBackend development in both monolithic and distributed, event-driven systems\nEnsuring technical excellence and empowering teams to deliver high quality, maintainable solutions\n\n👨‍🏭 Working experience\n🖥️ DIGIT, a Scopely Studio (1 year, 8 months)\nSenior Backend Developer, 2023/03 - present\nContributed to the implementation of new features for DIGIT games\nHighlights:\n\nDeveloped new features for the game, ensuring performance through monitoring using Datadog and Kibana, and stress testing with Locust\nImproved code scaffolding and testing practices for greater efficiency\nImproved code quality and consistency with mypy\nHosted technical trainings\n\n\n🖥️ Inari.io (4 years 9 months)\nBackend Architect, 2022/03 - 2023/03\nLed the technical development, testing and packaging of new platform features and proofs of concept, delivering new content to the product suites of Inari.\nPython Lead Engineer and Tech Coach, 2018/07 - 2022/03\nLed and mentored a cross-functional team of five developers.\nHighlights:\n\nDesigned, built and deployed a highly scalable, distributed policy admin platform, based on CQRS+ES/Clean architecture within a microservices ecosystem, following Domain Driven Design (DDD) best practices and patterns\nImplemented a retry/DLQ framework to use with Apache Kafka, greatly improving the performance over SQS\nEventual consistency for complex transactions achieved via choreography (event-driven) and orchestration (Taskflow)\nAll functionality was exposed and secured via a GraphQL API\nDesigned and implemented a library to abstract Blockchain to serve as an append-only event store\nDesigned and implemented a high-performance RBAC + ABAC auth system based on pathfinding, improving the performance of existing authorisation python libraries like Casbin\nTrained and mentored junior developers to bring them up to speed\n\n\n🖥️ Self-employed (5 years 4 months)\nMelange, 2017/10 - 2023/01\nDeveloper and maintainer of Melange, an open-source library aiming to ease the creation of Event-driven architectures with Python. Adopted at 21Buttons and Inari.io. Out of maintenance in favor of Kafka.\n\ngithub.com/Rydra/melange\n\n\n🖥️ 21Buttons (1 year)\nPython Architect and Developer, 2017/07 - 2018/07\nContributed to the implementation of new features for the 21Buttons fashion social network app, and led the development of a Marketplace platform.\nHighlights:\n\nLed the Introduction of good testing practices and DDD patterns into the project\nImproved the existing Django solution by structuring the code to follow the Hexagonal Architecture, decoupling the framework from the business logic\n\n\n🖥️ Vistaprint (11 months)\n.NET / C# Software Engineer, 2016/09 - 2017/08\nContributed to the maintenance of their website by developing new features to enhance SEO.\nHighlights:\n\nImproved existing features and added new API entrypoints using .NET and .NET Core, TDD with NUnit, deployed the solution using Terraform and Docker, all hosted in AWS\n\n\n🖥️ Tokiota (1 year 7 months)\nSenior .NET and Javascript Engineer, 2015/01 - 2016/07\nContributed as a consultant to the development of several projects:\n\nAn XML engine for processing employee data and generating payslips, as well as an internal administration tool in the context of a SCRUM team composed of seven members\nAn e-Commerce platform to sell football subscriptions in a team of three people\n\nHighlights:\n\nImplemented complex backend algorithms and designed the architecture of the project, decoupling NHibernate persistence from the business logic\nEncouraged DDD, TDD and design patterns best practices within the team\nImplemented a distributed software solution using Azure Service Fabric\n\n\n🖥️ King-eClient (1 year 1 month)\n.NET Lead Developer, 2014/01 - 2015/01\nContributed as a consultant to the development efforts of two projects, an e-Commerce platform for a pharma company, and a mobile application for a public transportation company.\nHighlights:\n\nDesigned and implemented the e-Commerce platform from inception using the ASP.NET technologies\nDesigned and implemented the mobile application from inception using Xamarin\n\n\n🖥️ Good Deal (1 year 1 month)\nAssociate .NET Developer, 2013/01 - 2014/01\nContributed to the development of new features for a software product targeted at retailers to deliver coupons to customers, based on their purchases and their profile, aiming to increase fidelisation and satisfaction.\n\n🖥️ Sant Celoni Town Hall\n.NET developer freelancer, 2011/06 - 2012/01\nLed a technical team of three member to develop a small e-Government platform to handle several types of form applications from citizens with ASP.NET.\n\n🖥️ Universitat Politècnica de Catalunya (1 year 8 months)\nDeveloper intern, 2008/07 - 2010/02\nContributed to the development of new features for the educational platform Moodle. Developed frontend features with PHP, HTML and CSS.\n⚙️ Technical Skills\nProgramming Skills\n\nAlgorithms and problem-solving mindset\nSOLID principles\nArchitectural patterns: Clean Architecture, CQRS + Event Sourcing, Event-driven, MVP\nTesting: Unit, Integration and End to End\nProgramming Paradigms: Domain-Driven Design, Object-Oriented Programming, Functional Programming\n\nBackend Technologies\n\nLanguages: Python, Javascript, C#, F#\nAsynchronous Frameworks: asyncio / anyio, Celery, Redis pubsub, Apache Kafka\nDatabases: PostgresSQL, Redis, Elasticsearch, Blockchain\nLocal environment development with containerized environments: Docker, Docker Compose\nWeb Frameworks: Django Rest Framework, Flask, FastAPI\nCloud providers: AWS, Heroku\n\n📖 Education &amp; Qualifications\nUniversitat Politècnica de Catalunya (UPC)\nMaster in Computing, Software Engineering, Information Systems and Databases, 2011 - 2013\nSpecialisation in software engineering principles, design patterns and database management\nUniversitat Politècnica de Catalunya (UPC)\nTechnical Engineer in Computing Management, 2006 - 2009\n📖 Trainings and Certifications\nCommunicating with Diplomacy and Tact, 2024/03\nLinkedIn\nEffective communication strategies for multicultural teams\nPeopleware, Agile Teams and Management 3.0, 03/2023\n233 Academy\nPractices and techniques to create autonomous teams\nData Science and Machine Learning with Python - Hands On!, 2016/09\nUdemy\nDeep dive into the implementation of ML-powered python applications\nMachine Learning, 2016/09\nCoursera\nIntroduction to the concepts of machine learning, classification algorithms and recommendation systems\nMisc. Skills\n👅 Languages\nMother tongue: Catalan, Spanish\nOther languages:\n\nEnglish: Fluent, Cambridge First Certificate (B2)\n\n🕹️ Hobbies\n\nBoard games (chess, LOTR LCG, card games and strategy games in general)\nVideo games\nSports (gym, hiking, long walks)\nLearning new tech that can be used in my daily job\nA good tea with a good conversation topic\n"},"Recetas/Masa-de-pizza":{"title":"Masa de pizza","links":[],"tags":["recetas"],"content":"Ingredientes\n\nPor persona:\n\n100g harina\n50ml agua\nun poco de masa madre\n1/2 cucharada de aceite de oliva\nsal\n\n\n\nPreparación\n\nAmasar todo y dejar reposar unas cuantas horas (mejor del día anterior). Dejar tapado en un bol\nPrecocinar la masa previamente durante unos 5 minutos en el horno precalentado a 180, pero cuidado de que no se haga demasiado y cruja!\n"},"Software-Engineering/How-tos/Changing-from-Docker-Desktop-to-Docker-Engine":{"title":"Changing from Docker Desktop to Docker Engine","links":[],"tags":["tech"],"content":"Changing to Docker Engine:\ndocker context use default\nChanging to Docker Desktop:\ndocker content use desktop-linux"},"Software-Engineering/How-tos/Software-to-install-in-a-newly-formatted-machine":{"title":"Software to install in a newly formatted machine","links":[],"tags":["tech"],"content":""},"Software-Engineering/Infographs/Explaining-CI-CD-to-a-kid":{"title":"Explaining CI-CD to a kid","links":["attachments/Pasted-image-20241024154043.png"],"tags":["tech"],"content":"\nOpen image"},"Software-Engineering/Infographs/Software-architecture-styles":{"title":"Software architecture styles","links":["attachments/Pasted-image-20241024155608.png"],"tags":["tech"],"content":"\nOpen image"},"Software-Engineering/Infographs/System-Design-Blueprint":{"title":"System Design Blueprint","links":[],"tags":["tech"],"content":"Purchase hi-res link\nA comprehensive visual guide that provides developers with a quick and easy reference to key concepts and best practices in system design. This handy cheatsheet or blueprint covers essential topics such as DNS, load balancing, API Gateway, video and image handling, caching, databases, unique ID generation, standard components like payment and recommendation services, and chat and streaming protocols. With this valuable resource at your fingertips, you’ll be well-equipped to tackle the challenges of designing and implementing scalable, efficient, and reliable systems.\nReferences\n\nblog.bytebytego.com/p/ep56-system-design-blueprint-the\nOriginal paper: www.ia.pw.edu.pl/~tkruk/edu/ersms/articles/SystemDesignBlueprint_TheUltimateGuide.pdf\n"},"Software-Engineering/Useful-software-table":{"title":"Useful software table","links":[],"tags":["tech"],"content":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNameDescriptionLinkKrohnkiteTiling manager for KDEOrganiseScript to organise files in FSorganize.readthedocs.io"},"TIL/concepts/Digital-Garden":{"title":"Digital Garden","links":[],"tags":["til"],"content":"A digital garden is a personal, open, and evolving collection of notes, ideas, and resources shared on the internet, typically in a non-linear format. Unlike traditional blogs or websites that emphasize polished, finished content, a digital garden is more focused on the growth of knowledge over time, allowing for updates, revisions, and exploration of thoughts in various stages of development.\nBlog post: dev.to/jbranchaud/the-digital-garden-l10"},"TIL/concepts/Learn-in-Public":{"title":"Learn in Public","links":[],"tags":["til"],"content":"“Learning in public” refers to the practice of sharing your learning journey, progress, and even mistakes openly, often through blog posts, social media, videos, or other platforms. The idea is to publicly document what you’re learning, whether it’s a new skill, a subject, or a project, while engaging with a broader community.\nThis approach has several benefits:\n\nAccountability: By sharing your progress, you’re more likely to stick with your goals.\nFeedback: You can receive helpful feedback and advice from others, often accelerating your learning process.\nBuilding a reputation: It helps build your personal brand as someone who is curious, consistent, and willing to share knowledge.\nHelping others: Your experiences, challenges, and solutions can be valuable for others going through similar learning processes.\n\nFor example, someone learning a new programming language might write regular blog posts about what they’ve learned, or post code snippets and discuss challenges and breakthroughs on GitHub or Twitter.\nReferences:\n\nwww.youtube.com/watch\nwww.swyx.io/learn-in-public\n"},"TIL/obsidian/Cornell-Technique":{"title":"Cornell Technique","links":["tags/til"],"tags":["til"],"content":"til the Cornell technique, a note-taking technique that provides a writing structure to help summarisation of what you study, as well as posterior studying to improve retention. People even managed to introduce it into ObsidianMD.\nmedium.com/obsidian-observer/from-paper-to-pixel-mastering-the-cornell-note-taking-method-in-the-digital-age-dae13ed83c29"},"TIL/obsidian/Exporting-vault-to-HTML-and-publish-it":{"title":"Exporting vault to HTML and publish it","links":["tags/TIL"],"tags":["til","TIL"],"content":"TIL to export my ObsidianMD vault as HTML and publish it on Github Pages. Tried Jekyll first, wasn’t quite what I was looking for, so I used the Obsidian Webpage Export (github.com/KosmosisDire/obsidian-webpage-export). Unfortunately the documentation wasn’t available, so I made it work by intuition, but at least I have now my personal digital garden where I can share what I learn as a software engineer.\nVery immature for now, but hopefully the beginning of something greater. Check out my garden!"},"TIL/obsidian/Quartz":{"title":"Quartz","links":["tags/til"],"tags":["til"],"content":"til about Quartz (github.com/jackyzha0/quartz), a very nice framework that transforms my obsidian vault into a beautiful website."},"TIL/obsidian/Slides-in-Obsidian":{"title":"Slides in Obsidian","links":[],"tags":[],"content":"You can create awesome presentations with ObsidianMD and the Advanced Slides plugin. Check it at mszturc.github.io/obsidian-advanced-slides/.\nIncredibly beautiful and simple.\n"},"index":{"title":"Welcome to Rydra's Digital Garden","links":[],"tags":[],"content":"Hey ho! Welcome to my digital garden. I’m David Jiménez, Senior software engineer currently working @ Scopely Games. Restless and curious, I’ve worked +10 years as developer and architect across a variety of fields, ranging from industries like insurance, digital marketing, pharma, social networks and now videogames. But, above everything else, I am mostly a problem solver who thinks and tries to fit the best solution to the problem at hand instead of always using the same tool over and over again.\nThis garden is the place where I store all the knowledge I’m acquiring as time goes by, in an effort to follow the Learning in Public philosophy where I can improve my learning method by sharing what I know with everybody else. I hope by reading my notes you feel comfortable.\nSome places where you can get in touch with me:\n\nGithub\nLinkedIn\nDEV.to where I share my thoughts on technical posts\n"}}